% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shadeHeight.R
\name{shadeHeight}
\alias{shadeHeight}
\title{Shade height calculation considering sun position and buildings outlines.}
\usage{
shadeHeight(location, build, height_field, sun_az, sun_elev, b = 0.1)
}
\arguments{
\item{location}{A \code{SpatialPoints*} object specifying the location for which to calculate shade height}

\item{build}{A \code{SpatialPolygonsDataFrame} object specifying the buildings outline}

\item{height_field}{The name of the column with building height in \code{build}}

\item{sun_az}{Sun azimuth, in decimal degrees.}

\item{sun_elev}{Sun elevation, in decimal degrees.}

\item{b}{Buffer size when joining intersection points with building outlines, to determine intersection height.}
}
\value{
Shade height, in meters.
}
\description{
This function calculates shade height at a given point (\code{location}),
taking into account:\itemize{
\item{Buildings outline, given by a polygonal layer including a height attribute}
\item{Sun position, given by elevation and azimuth angles}
}
}
\examples{

library(sp)
library(rgeos)
library(raster)

# Single location
ctr = gCentroid(build)
plot(build)
plot(ctr, add = TRUE)
location = ctr
build = build
height_field = "BLDG_HT"
sun_az = 30
sun_elev = 20
sun = sunLocation(location = location, sun_az = sun_az, sun_elev = sun_elev)
sun_ray = ray(from = location, to = sun)
build_outline = as(build_outline, "SpatialLinesDataFrame")
inter = gIntersection(build_outline, sun_ray)
plot(sun_ray, add = TRUE, col = "yellow")
plot(inter, add = TRUE, col = "red")
shadeHeight(location, build, height_field, sun_az, sun_elev)

# Grid
ext = as(extent(build), "SpatialPolygons")
r = raster(ext, res = 1)
proj4string(r) = proj4string(build)
grid = rasterToPoints(r, spatial = TRUE)
grid = SpatialPointsDataFrame(grid, data.frame(grid_id = 1:length(grid)))
build = build
height_field = "BLDG_HT"
sun_az = 70
sun_elev = 30
for(i in 1:length(grid)) {
  grid$shade_height[i] =
    shadeHeight(grid[i, ], build, height_field, sun_az, sun_elev)
}
shade = as(grid, "SpatialPixels")
shade = raster(shade)
proj4string(shade) = proj4string(build)
shade = rasterize(grid, shade, field = "shade_height")
plot(shade, col = grey(seq(0.9, 0.2, -0.01)))
contour(shade, add = TRUE)
plot(build, add = TRUE, border = "red")
}

